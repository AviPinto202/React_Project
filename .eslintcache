[{"D:\\React_Projects\\react-game2\\src\\index.js":"1","D:\\React_Projects\\react-game2\\src\\App.js":"2","D:\\React_Projects\\react-game2\\src\\pages\\admin.js":"3","D:\\React_Projects\\react-game2\\src\\pages\\register.js":"4","D:\\React_Projects\\react-game2\\src\\components\\menu.js":"5","D:\\React_Projects\\react-game2\\src\\components\\formField.js":"6"},{"size":220,"mtime":1609253584300,"results":"7","hashOfConfig":"8"},{"size":428,"mtime":1609253135396,"results":"9","hashOfConfig":"8"},{"size":637,"mtime":1609254904340,"results":"10","hashOfConfig":"8"},{"size":4410,"mtime":1609520222726,"results":"11","hashOfConfig":"8"},{"size":336,"mtime":1609253274792,"results":"12","hashOfConfig":"8"},{"size":1197,"mtime":1609254707702,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"dejygg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"D:\\React_Projects\\react-game2\\src\\index.js",[],["29","30"],"D:\\React_Projects\\react-game2\\src\\App.js",[],"D:\\React_Projects\\react-game2\\src\\pages\\admin.js",["31"],"import { useState, useEffect } from 'react';\r\n\r\n\r\nconst Admin = (props) => {\r\n\r\n    //var + state\r\n    const [user, setUser] = useState(null)\r\n\r\n    //update the user once the page loaded\r\n    useEffect(() => {\r\n        let u = localStorage.getItem('user')\r\n        setUser(JSON.parse(u))\r\n    }, []);\r\n\r\n\r\n    if (user == null) \r\n        return <h1>Please Login</h1>\r\n    else \r\n        return (\r\n        <div>\r\n            <h1>Admin page</h1>\r\n            <p>\r\n                Welcome to admin mangetment page\r\n            </p>\r\n            <img width=\"400px\" src={user.profileImg} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin;","D:\\React_Projects\\react-game2\\src\\pages\\register.js",[],"D:\\React_Projects\\react-game2\\src\\components\\menu.js",[],"D:\\React_Projects\\react-game2\\src\\components\\formField.js",["32"],"const FormField = (props) => {\r\n\r\n    switch (props.type) {\r\n        case 'list':\r\n            return (\r\n                <div className=\"field\">\r\n                    <label>{props.name}</label>\r\n                    <datalist id={props.listId}>\r\n                        {props.data.map(item => <option value={item.name}> {item.name} </option>)}\r\n                    </datalist>\r\n                    <input type=\"text\" list={props.listId} onInput={(event) => { props.action(event.target.value) }} />\r\n                </div>\r\n            )\r\n        case 'file':\r\n            return (\r\n                <div className=\"field\">\r\n                    <label>{props.name}</label>\r\n                    <input type={props.type} onChange={(event) => { props.action(event.target) }}></input>\r\n                    <img width=\"200px\" src={props.targetImg} />\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"field\">\r\n                    <label>{props.name}</label>\r\n                    <input type={props.type} onInput={(event) => { props.action(event.target.value) }} />\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default FormField;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":25,"column":13,"nodeType":"39","endLine":25,"endColumn":56},{"ruleId":"37","severity":1,"message":"38","line":19,"column":21,"nodeType":"39","endLine":19,"endColumn":64},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]